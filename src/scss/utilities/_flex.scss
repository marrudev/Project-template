@use '../abstracts/' as *;

// Flex Direction

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-col {
  display: flex;
  flex-direction: column;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

// Flex wrap

.flex-wrap {
  flex-wrap: wrap;
}

// Flex basis

.flex-basis-25 {
  flex-basis: 25%;
}

.flex-basis-50 {
  flex-basis: 50%;
}

.flex-basis-75 {
  flex-basis: 75%;
}

.flex-basis-full {
  flex-basis: 100%;
}

// Flex

.flex-1 {
  flex: 1 1 0%;
}

.flex-auto {
  flex: 1 1 auto;
}

.flex-initial {
  flex: 0 1 auto;
}

.flex-none {
  flex: none;
}

// Flex Grow

.grow {
  flex-grow: 1;
}

.grow-0 {
  flex-grow: 0;
}

// Flex Shrink

.shrink {
  flex-shrink: 1;
}

.shrink-0 {
  flex-shrink: 0;
}

// Order

.order-1 {
  order: 1;
}

.order-2 {
  order: 2;
}

.order-3 {
  order: 3;
}

.order-4 {
  order: 4;
}

.order-5 {
  order: 5;
}

.order-6 {
  order: 6;
}

.order-7 {
  order: 7;
}

.order-8 {
  order: 8;
}

.order-9 {
  order: 9;
}

.order-10 {
  order: 10;
}

.order-11 {
  order: 11;
}

.order-12 {
  order: 12;
}

.order-first {
  order: -9999;
}

.order-last {
  order: 9999;
}

.order-none {
  order: 0;
}

// Justify-content

.justify-start {
  justify-content: flex-start;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-baseline {
  justify-content: baseline;
}

// Flex-align

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-center {
  align-items: center;
}

.align-stretch {
  align-items: stretch;
}

// Both Center

.flex-center-center {
  justify-content: center;
  align-items: center;
}

// Gap

@each $size, $value in $sizes {
  .gap-#{$size} {
    gap: #{$value};
  }
}

@each $size, $value in $sizes {
  .gap-x-#{$size} {
    column-gap: #{$value};
  }
}

@each $size, $value in $sizes {
  .gap-y-#{$size} {
    row-gap: #{$value};
  }
}
